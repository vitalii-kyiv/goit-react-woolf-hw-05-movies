{"version":3,"file":"static/js/36.e1ead57a.chunk.js","mappings":"iOACA,GAAiB,E,SCajB,EAZmB,SAAHA,GAA0B,IAApBC,EAAYD,EAAZC,aACpB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAAA,QAAMF,UAAWG,EAAAA,KAAUC,SAAUN,EAAaG,SAAA,EAChDF,EAAAA,EAAAA,KAAA,SAAOM,KAAK,WACZN,EAAAA,EAAAA,KAAA,SAAOO,KAAK,OAAOD,KAAK,QAAQE,aAAa,MAAMC,WAAS,KAC5DT,EAAAA,EAAAA,KAAA,UAAQO,KAAK,SAAQL,SAAC,eAI9B,E,0BCuCA,EA7CmB,WACjB,IAAAQ,GAAyCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAaF,EAAA,GAAEG,EAAeH,EAAA,GACrCI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAoCV,EAAAA,EAAAA,WAAS,GAAMW,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,IAEhCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQP,EAAaQ,IAAI,SAC/B,GAAID,EAAO,CACT,IAAME,EAAe,eAAA9B,GAAA+B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEDC,EAAAA,EAAAA,IAAmBV,GAAO,KAAD,GAAtCM,EAAIC,EAAAI,MACDC,OAAS,GAChBvB,EAAgBiB,GAElBR,GAAc,GAAMS,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEpBO,QAAQC,IAAGR,EAAAM,IAAQ,yBAAAN,EAAAS,OAAA,GAAAX,EAAA,kBAEtB,kBAVoB,OAAAjC,EAAA6C,MAAA,KAAAC,UAAA,KAWrBhB,GACF,CACF,GAAG,CAACT,IAWJ,OACEhB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAC6C,EAAU,CAAC9C,aAXK,SAAA+C,GACnBA,EAAIC,iBACJ,IAAMrB,EAAQoB,EAAIE,OAAOC,SAASvB,MAAMwB,MAAMC,OAC1CzB,IACFN,EAAgB,CAAEM,MAAAA,IAClBF,GAAc,GAElB,IAKKD,GAAuC,IAAzBT,EAAcwB,QAC3BtC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,YAAWC,SAAC,8DAIzBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CAACC,WAAYvC,MAI/B,C","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import css from './Form.module.css';\n\nconst SearchForm = ({ handleSubmit }) => {\n  return (\n    <div className=\"container\">\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label name=\"query\"></label>\n        <input type=\"text\" name=\"query\" autoComplete=\"off\" autoFocus />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","import { getSearchMoviesApi } from 'api/movieService';\nimport SearchForm from 'components/Form/Form';\nimport MovieList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [searchResults, setSearchResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isSearched, setIsSearched] = useState(false);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      const getSearchMovies = async () => {\n        try {\n          const data = await getSearchMoviesApi(query);\n          if (data.length > 0) {\n            setSearchResult(data);\n          }\n          setIsSearched(true);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      getSearchMovies();\n    }\n  }, [searchParams]);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const query = evt.target.elements.query.value.trim();\n    if (query) {\n      setSearchParams({ query });\n      setIsSearched(false);\n    }\n  };\n\n  return (\n    <div>\n      <SearchForm handleSubmit={handleSubmit} />\n      {isSearched && searchResults.length === 0 ? (\n        <p className=\"container\">\n          Movies according to your search query are not available.\n        </p>\n      ) : (\n        <MovieList moviesData={searchResults} />\n      )}\n    </div>\n  );\n};\nexport default MoviesPage;\n"],"names":["_ref","handleSubmit","_jsx","className","children","_jsxs","css","onSubmit","name","type","autoComplete","autoFocus","_useState","useState","_useState2","_slicedToArray","searchResults","setSearchResult","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","isSearched","setIsSearched","useEffect","query","get","getSearchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getSearchMoviesApi","sent","length","t0","console","log","stop","apply","arguments","SearchForm","evt","preventDefault","target","elements","value","trim","MovieList","moviesData"],"sourceRoot":""}